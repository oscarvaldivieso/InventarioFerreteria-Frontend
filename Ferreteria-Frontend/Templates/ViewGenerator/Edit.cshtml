@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
@:<div class="col-sm-12">
@:<div class="card mb-0" style="border-radius: 20px; overflow: hidden;">
        @:<div class="card-header">
        
            <h5 class="card-title" style="font-size: 21px; color: white; font-weight:600">Editar @Model.ViewName</h5>
        @:</div>
        @:<div class="card-body">
            @:<div class="row">
                @:<div class="col-md-12">
                    @:<form asp-action="Edit">
                        @:<div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        @:{ 
                            int counter = 0;
                        @:}

                        foreach (var property in Model.ModelMetadata.Properties)
                        {
                            if (property.IsPrimaryKey)
                            {
                                @:<input type="hidden" asp-for="@property.PropertyName" />
                                continue;
                            }

                            if (property.PropertyName == "Usuar_Creacion" || 
                                property.PropertyName == "Fecha_Creacion" || 
                                property.PropertyName == "Usuar_Modificacion" || 
                                property.PropertyName == "Fecha_Modificacion")
                            {
                                continue;
                            }

                            if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
                            {
                                if (counter % 2 == 0)
                                {
                                    @:<div class="row"> 
                                }

                                if (property.IsForeignKey)
                                {
                                    @:<div class="form-group col-md-6">
                                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                                        @:<select asp-for="@property.PropertyName" class="form-control" asp-items="ViewBag.@property.PropertyName"></select>
                                    @:</div>
                                }
                                else if (property.TypeName.Equals("System.Boolean"))
                                {
                                    @:<div class="form-group col-md-6 form-check">
                                        @:<label class="form-check-label">
                                            @:<input class="form-check-input" asp-for="@property.PropertyName" /> @@Html.DisplayNameFor(model => model.@GetValueExpression(property))
                                        @:</label>
                                    @:</div>
                                }
                                else if (property.IsEnum && !property.IsEnumFlags)
                                {
                                    @:<div class="form-group col-md-6">
                                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                                        @:<select asp-for="@property.PropertyName" class="form-control"></select>
                                    @:</div>
                                }
                                else if (property.IsMultilineText)
                                {
                                    @:<div class="form-group col-md-6">
                                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                                        @:<textarea asp-for="@property.PropertyName" class="form-control"></textarea>
                                    @:</div>
                                }
                                else
                                {
                                    @:<div class="form-group col-md-6">
                                        @:<label asp-for="@property.PropertyName" class="control-label"></label>
                                        @:<input asp-for="@property.PropertyName" class="form-control" />
                                    @:</div>
                                }

                                counter++;
                                if (counter % 2 == 0)
                                {
                                    @:</div>  <!-- Cierra la fila después de dos campos -->
                                }
                            }
                        }
                        <div class="form-group d-flex justify-content-end mt-3">
                            <input type="submit" value="Insertar" class="btn btn-primary mx-2" />
                            <input type="button" value="Regresar" id="btnCerrarCrear" class="btn btn-rounded btn-outline-primary btn-md mx-2" data-dismiss="modal" />
                        </div>
                    @:</form>
                @:</div>
            @:</div>
       @:</div>
   @:</div>
   @:</div>

@:{
    if (Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:@@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@:}
    }
    // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}
@functions
{
    string GetAssociationName(IPropertyMetadata property)
    {
        //Todo: Implement properly.
        return property.PropertyName;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }
}